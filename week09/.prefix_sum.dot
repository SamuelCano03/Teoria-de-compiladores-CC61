digraph "CFG for 'prefix_sum' function" {
	label="CFG for 'prefix_sum' function";

	Node0x5580c1a33040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{entry:\l  %src.addr = alloca ptr, align 8\l  %dst.addr = alloca ptr, align 8\l  %N.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %tmp = alloca i32, align 4\l  %j = alloca i32, align 4\l  store ptr %src, ptr %src.addr, align 8\l  store ptr %dst, ptr %dst.addr, align 8\l  store i32 %N, ptr %N.addr, align 4\l  %0 = load i32, ptr %N.addr, align 4\l  %cmp = icmp slt i32 0, %0\l  br i1 %cmp, label %if.then, label %if.end11\l|{<s0>T|<s1>F}}"];
	Node0x5580c1a33040:s0 -> Node0x5580c1a33b60;
	Node0x5580c1a33040:s1 -> Node0x5580c1a33bd0;
	Node0x5580c1a33b60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then:                                          \l  store i32 0, ptr %i, align 4\l  br label %do.body\l}"];
	Node0x5580c1a33b60 -> Node0x5580c1a33f00;
	Node0x5580c1a33f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{do.body:                                          \l  store i32 0, ptr %tmp, align 4\l  store i32 0, ptr %j, align 4\l  %1 = load i32, ptr %j, align 4\l  %2 = load i32, ptr %i, align 4\l  %cmp1 = icmp slt i32 %1, %2\l  br i1 %cmp1, label %if.then2, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5580c1a33f00:s0 -> Node0x5580c1a34230;
	Node0x5580c1a33f00:s1 -> Node0x5580c1a342b0;
	Node0x5580c1a34230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{if.then2:                                         \l  br label %do.body3\l}"];
	Node0x5580c1a34230 -> Node0x5580c1a34410;
	Node0x5580c1a34410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.body3:                                         \l  %3 = load ptr, ptr %src.addr, align 8\l  %4 = load i32, ptr %j, align 4\l  %idxprom = sext i32 %4 to i64\l  %arrayidx = getelementptr inbounds i32, ptr %3, i64 %idxprom\l  %5 = load i32, ptr %arrayidx, align 4\l  %6 = load i32, ptr %tmp, align 4\l  %add = add nsw i32 %6, %5\l  store i32 %add, ptr %tmp, align 4\l  %7 = load i32, ptr %j, align 4\l  %inc = add nsw i32 %7, 1\l  store i32 %inc, ptr %j, align 4\l  br label %do.cond\l}"];
	Node0x5580c1a34410 -> Node0x5580c1a34b30;
	Node0x5580c1a34b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.cond:                                          \l  %8 = load i32, ptr %j, align 4\l  %9 = load i32, ptr %i, align 4\l  %cmp4 = icmp slt i32 %8, %9\l  br i1 %cmp4, label %do.body3, label %do.end, !llvm.loop !6\l|{<s0>T|<s1>F}}"];
	Node0x5580c1a34b30:s0 -> Node0x5580c1a34410;
	Node0x5580c1a34b30:s1 -> Node0x5580c1a345e0;
	Node0x5580c1a345e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{do.end:                                           \l  %10 = load i32, ptr %tmp, align 4\l  %11 = load ptr, ptr %dst.addr, align 8\l  %12 = load i32, ptr %i, align 4\l  %idxprom5 = sext i32 %12 to i64\l  %arrayidx6 = getelementptr inbounds i32, ptr %11, i64 %idxprom5\l  store i32 %10, ptr %arrayidx6, align 4\l  br label %if.end\l}"];
	Node0x5580c1a345e0 -> Node0x5580c1a342b0;
	Node0x5580c1a342b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{if.end:                                           \l  %13 = load i32, ptr %i, align 4\l  %inc7 = add nsw i32 %13, 1\l  store i32 %inc7, ptr %i, align 4\l  br label %do.cond8\l}"];
	Node0x5580c1a342b0 -> Node0x5580c1a362f0;
	Node0x5580c1a362f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{do.cond8:                                         \l  %14 = load i32, ptr %i, align 4\l  %15 = load i32, ptr %N.addr, align 4\l  %cmp9 = icmp slt i32 %14, %15\l  br i1 %cmp9, label %do.body, label %do.end10, !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x5580c1a362f0:s0 -> Node0x5580c1a33f00;
	Node0x5580c1a362f0:s1 -> Node0x5580c1a36570;
	Node0x5580c1a36570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{do.end10:                                         \l  br label %if.end11\l}"];
	Node0x5580c1a36570 -> Node0x5580c1a33bd0;
	Node0x5580c1a33bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{if.end11:                                         \l  ret void\l}"];
}
